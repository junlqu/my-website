@use "sass:map";

$themes: (
    // Light theme
    light: (
        // Primary and accent colors
        p:     #B5D99C,
        p2:    #9EC087,
        p3:    #779C5E,
        p4:    #5F8545,
        p5:    #3B5C25,
        a:     #CEEC97,
        a2:    #A9CF64,
        a3:    #7EAB2A,
        
        // Secondary colors
        s:     #C2847A,
        s2:    #A1594D,
        s3:    #863C2F,
        s4:    #6D2114,
        
        // Neutral colors
        n:     #EEF0F2,
        n2:    #C6C7C4,
        n3:    #9C9C9C,
        n4:    #3D3D3D,
        n5:    #0E0E0E,
    ),

    // Dark theme
    dark: (
        // Primary and accent colors
        p:     #496F5D,
        p2:    #63907B,
        p3:    #6EAA8D,
        p4:    #74C69F,
        p5:    #9AF6CB,
        a:     #52796F,
        a2:    #275549,
        a3:    #11382E,
        
        // Secondary colors
        s:     #3F334D,
        s2:    #635276,
        s3:    #8D74A9,
        s4:    #8D74A9,

        // Neutral colors
        n:     #0B0500,
        n2:    #312923,
        n3:    #4E4946,
        n4:    #8C8A88,
        n5:    #CAC8C7,
    )
);

$theme-map: null;

// Function used to map colors depending on theme
@mixin themed() {
    $suffix: theme;
    
    @each $th, $map in $themes {
        .#{$th}-#{$suffix} & {
            $theme-map: () !global;
            
            @each $key, $val in $map {
                $theme-map: map.merge($theme-map, ($key: map.get(map.get($themes, $th), '#{$key}'))) !global;
            }

            @content;
            $theme-map: null !global;
        }
    }
}

// Function called to get the colours
@function c($key) {
    @return map.get($theme-map, $key);
}